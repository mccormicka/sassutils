@import '../functions/clearfix';

/** 
 * Debugging 
 */
 $gridDebug:false !default;

.row { 
	// width: auto; 
	min-height: 1px;//Force min-height in order for layout to work correctly.
	@if( $gridDebug )
	{
		background:rgba(255, 0, 0, 0.25);
		@include box-shadow(inset 0 0 0 1px red);
		height:100%; 	
	}
}

.cell{
	min-height: 1px;//Force min-height in order for layout to work correctly.
	@if( $gridDebug )
	{
		@include box-shadow(inset 0 0 0 1px blue);
		min-height: 20px;
		background: rgba(0, 255, 0, 0.25);
	}
}

/**
 * Converts the numbers 1 - 12 into their written forms.
 */
@function numberToWord($num) {
  $count:1;
  @each $word in one,two,three,four,five,six,seven,eight,nine,ten,eleven,
    twelve,thirteen,fourteen,fifteen,sixteen,seventeen,eighteen,nineteen,
    twenty,twentyone,twentytwo,twentythree,twentyfour{
    @if ($count == $num) { @return $word; }
    $count: $count + 1;
  }
  @return "invalid";
}

@function calculateColumnPercentage($colNumber, $totalColumns) {
	@return percentage(( $colNumber / $totalColumns));
}

@mixin createGrid($identifier, $maxColumns, $maxWidth, $gutter)
{
	.#{$identifier}-grid{
		max-width: $maxWidth;
		margin-left: auto;
		margin-right: auto;
	}
	.#{$identifier}-gutter-left{
		padding-left:$gutter;
	}
	.#{$identifier}-gutter-right{
		padding-right:$gutter;
	}
	.#{$identifier}-gutter{
		padding-left:$gutter;
		padding-right:$gutter;
	}

	@for $i from 1 through $maxColumns {
		.row.#{$identifier}-#{numberToWord($i)}{ 
			width: 100%;
			@for $j from 1 through $maxColumns{
				>.cell.#{$identifier}-#{numberToWord($j)}{
					width:calculateColumnPercentage($j,$i);
					float:left;
				};
				>.cell.end.#{$identifier}-#{numberToWord($j)}{
					float:right;
				}; 
				>.cell.centered.#{$identifier}-#{numberToWord($j)}{
					float:none;
					margin-left:auto;
					margin-right:auto;
				}; 
			};
		};
    }
    .row { 
    	@include clearfix(); 
	}
}